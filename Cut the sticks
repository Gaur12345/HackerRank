import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

public class Solution {

    // Complete the cutTheSticks function below.
    static int[] cutTheSticks(int[] arr)
    {
        
        int count=0;
        ArrayList <Integer> l1=new ArrayList<Integer>();
        for(int i=0;i<arr.length;i++)
        {
            Arrays.sort(arr);
            int min = arr[0];
           for(int j=0;j<arr.length;j++)
           {
               int num=-3;
               if(arr[j]!=99999)
               {
                    num=arr[j] - min;
               }
               
               if(num > -1)
               {
                   if(num == 0 )
                   { 
                       arr[j]=99999;
                       count++;
                   }
                   else
                   {
                       count++;
                       arr[j]=num;
                   }
                   
               }
           }
           if(count==0)
            break;
           l1.add(count);
           count=0;

        }

        int ans[] = new int[l1.size()];

        for(int i=0;i<l1.size();i++)
        {
            ans[i]=l1.get(i);
        }
        return ans;


    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] arr = new int[n];

        String[] arrItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arrItem = Integer.parseInt(arrItems[i]);
            arr[i] = arrItem;
        }

        int[] result = cutTheSticks(arr);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
